// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// schema.prisma

enum Role {
  USER
  ADMIN
}

model User {
  id                   String    @id @default(cuid())
  username             String
  email                String    @unique
  password             String
  ipAddress            String
  userAgent            String
  role                 Role      @default(USER)
  articles             Article[]
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  resetPasswordToken   String? // Optional field
  resetPasswordExpires DateTime? // Optional field

  @@map("User")
}

model NewsCategory {
  id           Int       @id @default(autoincrement())
  name         String    @unique
  status       String
  totalResults Int
  articles     Article[]
}

model Article {
  id          Int          @id @default(autoincrement())
  sourceName  String?
  title       String
  description String?
  url         String
  urlToImage  String?
  publishedAt DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  content     String?
  categoryId  Int
  category    NewsCategory @relation(fields: [categoryId], references: [id])
  User        User?        @relation(fields: [userId], references: [id])
  userId      String?
  Tag         Tag?         @relation(fields: [tagId], references: [id])
  tagId       String
}

model Tag {
  id   String @id @default(cuid())
  name String @unique

  createdAt DateTime @default(now())

  Article Article[]
}
